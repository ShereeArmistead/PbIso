funtest <- function(t, T1 = 3000, type = c("SK1", "SK2")) {
if(type == 'SK1') {
T1 = 4570
}else if(type == 'SK2') {
T1 = 3700
}else
T1 = 3000
function(t) {
t + T1
}
}
funtest(2000, type = 'SK1') # should be 6570
funtest(2000, type = 'SK2') # should be 5700
funtest <- function(t, T1 = 3000, type = c("SK1", "SK2")) {
if(type == 'SK1') {
T1 <- 4570
}else if(type == 'SK2') {
T1 <- 3700
}else
T1 <- 3000
function(t) {
t + T1
}
}
funtest(2000, type = 'SK1') # should be 6570
funtest <- function(t, T1 = 3000, type = c("SK1", "SK2")) {
if(type == 'SK1') {
T1 <- 4570
}else if(type == 'SK2') {
T1 <- 3700
}else
T1 <- 3000
t + T1
}
funtest <- function(t, T1 = 3000, type = c("SK1", "SK2")) {
if(type == 'SK1') {
T1 <- 4570
}else if(type == 'SK2') {
T1 <- 3700
}else
T1 <- 3000
t + T1
}
funtest(2000, type = 'SK1') # should be 6570
funtest(2000, type = 'SK2') # should be 5700
funtest(2000)               # should be 5700
funtest(2000, T1 = 1000)    # should be 4000
funtest <- function(t, T1 = 3000, type = c("SK1", "SK2")) {
if(type == 'SK1') {
T1 <- 4570
}else if(type == 'SK2') {
T1 <- 3700
}else
T1 <- T1
t + T1
}
funtest(2000, type = 'SK1') # should be 6570
funtest(2000, type = 'SK2') # should be 5700
funtest(2000)               # should be 5700
funtest <- function(t, T1 = 3000, type = c('SK1', 'SK2')) {
T1 <- ifelse(type == 'SK1', 4570, ifelse(type = 'SK2', 3700, 3000))
t + T1
}
funtest(2000, type = 'SK1') # should be 6570
funtest(2000, type = 'SK2') # should be 5700
funtest <- function(t, T1 = 3000, type = c('SK1', 'SK2')) {
T1 <- ifelse(type == 'SK1', 4570, ifelse(type = 'SK2', 3700, 3000))
t + T1
}
funtest <- function(t, T1 = 3000, type = c('SK1', 'SK2')) {
T1 <- ifelse(type == 'SK1', 4570, ifelse(type == 'SK2', 3700, 3000))
t + T1
}
funtest(2000, type = 'SK1') # should be 6570
funtest(2000, type = 'SK2') # should be 5700
funtest(2000)               # should be 5700
funtest <- function(t, T1 = 3000, type = c('SK1', 'SK2')) {
T1 <- ifelse(type == 'SK1', 4570, ifelse(type == 'SK2', 3700, 3000))
t + T1
}
funtest(2000, type = 'SK1') # should be 6570
funtest(2000, type = 'SK2') # should be 5700
funtest(2000)               # should be 5700
funtest(2000, T1 = 1000)    # should be 4000
funtest <- function(t, T1 = 3000, type = c('SK1', 'SK2')) {
T1 <- if(type == 'SK1', 4570)
t + T1
}
funtest <- function(t, T1 = 3000, type = c('SK1', 'SK2')) {
T1 <- if(type == 'SK1') {4570}
t + T1
}
funtest(2000, type = 'SK1') # should be 6570
funtest(2000, type = 'SK2') # should be 5700
funtest(2000)               # should be 5700
funtest <- function(t, T1 = 3000, type = c('SK1', 'SK2')) {
T1 <- if(type == 'SK1') {4570}
T1 <- T1
t + T1
}
funtest(2000, type = 'SK1') # should be 6570
funtest(2000, type = 'SK2') # should be 5700
funtest(2000)               # should be 5700
funtest(2000, T1 = 1000)    # should be 4000
funtest <- function(t, T1 = 3000, type = c('SK1', 'SK2')) {
T1 <- if(type == 'SK1') {4570}
T1 <- if(type == 'SK2') {3700}
T1 <- if(missing(type)) {3000}
t + T1
}
funtest(2000, type = 'SK1') # should be 6570
funtest(2000, type = 'SK2') # should be 5700
funtest(2000)               # should be 5700
funtest <- function(t, T1 = 3000, type = c('SK1', 'SK2')) {
T1 <- if(type == 'SK1') {4570}
T1 <- if(type == 'SK2') {3700}
T1 <- if(missing(type)) {3000}
t + T1
}
funtest(2000, type = 'SK1') # should be 6570
funtest <- function(t, T1 = 3000, type = c('SK1', 'SK2')) {
T1 <- if(type == 'SK1') {4570}
T1 <- if(type == 'SK2') {3700}
T1 <- if(missing(type)) {3000}
t + T1
}
funtest(2000, type = 'SK1') # should be 6570
funtest(2000, type = 'SK2') # should be 5700
funtest(2000)               # should be 5700
funtest(2000, T1 = 1000)    # should be 4000
funtest <- function(t, T1 = 3000, type = c('SK1', 'SK2')) {
T1 <- if(type == 'SK1') {4570}
T1 <- if(type == 'SK2') {3700}
T1 <- if(missing(type)) {T1}
t + T1
}
funtest(2000, type = 'SK1') # should be 6570
funtest(2000, type = 'SK2') # should be 5700
funtest(2000)               # should be 5700
funtest(2000, T1 = 1000)    # should be 4000
formals(Calc64)
formals(funtst)
formals(funtest)
# ------------------------------------------------------------------------------
# Script for Pb isotope calculations - importing and formatting Pb isotope data
# Script author: Sheree Armistead
# Email: sarmistead@laurentian.ca
# ------------------------------------------------------------------------------
# Load libraries ---------------------------------------------------------------
library(tidyverse)
library(data.table)
# ------------------------------------------------------------------------------
# Script for Pb isotope calculations - importing and formatting Pb isotope data
# Script author: Sheree Armistead
# Email: sarmistead@laurentian.ca
# ------------------------------------------------------------------------------
# Load libraries ---------------------------------------------------------------
library(tidyverse)
install.packages("tidyverse")
# ------------------------------------------------------------------------------
# Script for Pb isotope calculations - importing and formatting Pb isotope data
# Script author: Sheree Armistead
# Email: sarmistead@laurentian.ca
# ------------------------------------------------------------------------------
# Load libraries ---------------------------------------------------------------
library(tidyverse)
install.packages("ellipsis")
# ------------------------------------------------------------------------------
# Script for Pb isotope calculations - importing and formatting Pb isotope data
# Script author: Sheree Armistead
# Email: sarmistead@laurentian.ca
# ------------------------------------------------------------------------------
# Load libraries ---------------------------------------------------------------
library(tidyverse)
install.packages(c("colorspace", "dplyr", "fansi", "gtools", "mvtnorm", "plotly", "proxy", "quantreg", "rlang", "stringi", "tibble", "units", "vctrs"))
# ------------------------------------------------------------------------------
# Script for Pb isotope calculations - importing and formatting Pb isotope data
# Script author: Sheree Armistead
# Email: sarmistead@laurentian.ca
# ------------------------------------------------------------------------------
# Load libraries ---------------------------------------------------------------
library(tidyverse)
setwd('U:/5. R/CustomPackages')
#create("PbIso") #don't need to redo this
# Now create package files and save in directory
# Process documentation
setwd("./PbIso")
devtools::load_all()
devtools::document()
#Build pdf manual
setwd("..")
# check(pkg = "Pbtesting")
build_manual(pkg = "PbIso", path = NULL)
# Now install package
install("PbIso")
library(PbIso)
library(devtools)
library(roxygen2)
setwd('U:/5. R/CustomPackages')
#create("PbIso") #don't need to redo this
# Now create package files and save in directory
# Process documentation
setwd("./PbIso")
devtools::load_all()
devtools::document()
#Build pdf manual
setwd("..")
# check(pkg = "Pbtesting")
build_manual(pkg = "PbIso", path = NULL)
# Now install package
install("PbIso")
library(PbIso)
setwd('U:/2. Projects/Paper Pb R script')
knitr::opts_chunk$set(echo = TRUE, fig.pos= "h")
library(tidyverse)
library(cowplot)
library(pander)
library(bookdown)
library(tinytex)
library(ks)
library(reshape2)
library(rmarkdown)
library(float)
library(kableExtra)
library(PbIso)
# Hypothetical sample
xs <- 13.5
ys <- 14.5
zs <-
ageA <- 2700
# SK plotting
X1 <- 11.152            # 206Pb/204Pb at 3700 Ma - Stacey & Kramers 1975
Y1 <- 12.998            # 207Pb/204Pb at 3700 Ma - Stacey & Kramers 1975
Z1 <- 31.230            # 208Pb/204Pb at 3700 Ma - Stacey & Kramers 1975
T1 <- 3700       # Age 3700 Ma
model <- modelcurve(0:3700)
model.subset <- model[seq(1, nrow(model), 500),]
my_kable = function(x, max.rows=6, ...) {
knitr::kable(x[1:max.rows, ], ..., "simple") %>%
kableExtra::kable_styling(latex_options = "HOLD_position")
}
Calc64(2700)
rm(list = c("Calc64", "Calc74", "Calc84", "CalcModAge", "CalcMu"))
setwd('U:/5. R/CustomPackages')
#create("PbIso") #don't need to redo this
# Now create package files and save in directory
# Process documentation
setwd("./PbIso")
devtools::load_all()
devtools::document()
#Build pdf manual
setwd("..")
# check(pkg = "Pbtesting")
build_manual(pkg = "PbIso", path = NULL)
# Now install package
install("PbIso")
library(PbIso)
# Add models then rerun lines 6 to 23
setwd('U:/5. R/CustomPackages/PbIso')
SK1 <- list(T1  = 4570, X1  = 9.307, Y1  = 10.294, Z1  = 29.487, Mu1 = 7.19, W1 = 33.21)
usethis::use_data(SK1, PbIso, overwrite=TRUE)
SK2 <- list(T1  = 3700, X1  = 11.152, Y1  = 12.998, Z1  = 31.230, Mu1 = 9.74, W1 = 36.84)
usethis::use_data(SK2, PbIso, overwrite=TRUE)
setwd('U:/2. Projects/Paper Pb R script')
knitr::opts_chunk$set(echo = TRUE, fig.pos= "h")
library(tidyverse)
library(cowplot)
library(pander)
library(bookdown)
library(tinytex)
library(ks)
library(reshape2)
library(rmarkdown)
library(float)
library(kableExtra)
library(PbIso)
# Hypothetical sample
xs <- 13.5
ys <- 14.5
zs <-
ageA <- 2700
# SK plotting
X1 <- 11.152            # 206Pb/204Pb at 3700 Ma - Stacey & Kramers 1975
Y1 <- 12.998            # 207Pb/204Pb at 3700 Ma - Stacey & Kramers 1975
Z1 <- 31.230            # 208Pb/204Pb at 3700 Ma - Stacey & Kramers 1975
T1 <- 3700       # Age 3700 Ma
model <- modelcurve(0:3700)
model.subset <- model[seq(1, nrow(model), 500),]
my_kable = function(x, max.rows=6, ...) {
knitr::kable(x[1:max.rows, ], ..., "simple") %>%
kableExtra::kable_styling(latex_options = "HOLD_position")
}
Calc64(2700)
Calc64(2700, T1 = 4000, X1 = 9.5, Mu1 = 7)
Calc64(2700, Mu1 = 8)
Calc64(2700, model = SK1)
my_model <- list(T1 = 4000, X1 = 9, Y1 = 10, Z1 = 30, Mu1 = 8)
Calc64(2700, model = my_model)
p1 <- ggplot(model, aes(x = x, y = y)) +
labs(y = expression(paste(""^207, "Pb/", ""^204, "Pb")),
x = expression(paste(""^206, "Pb/", ""^204, "Pb"))) +
geom_line() +
geom_point(x = X1, y = Y1) +
annotate('text', x = X1, y = Y1, label = "T1 = 3700 Ma", hjust=-0.1, vjust=0.75) +
geom_point(data = model.subset) +
geom_text(data = model.subset, aes(label = t), hjust=1, vjust=-0.5) +
geom_abline(slope = geochron76slope(3000), intercept = geochron76yint(3000), linetype = 2) +
geom_abline(slope = geochron76slope(2000), intercept = geochron76yint(2000), linetype = 2) +
geom_abline(slope = geochron76slope(1000), intercept = geochron76yint(1000), linetype = 2) +
geom_abline(slope = geochron76slope(0), intercept = geochron76yint(0), linetype = 2) +
theme_bw(base_size = 18) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
ylim(12.75, 16)
p2 <- ggplot(model, aes(x = x, y = z)) +
labs(y = expression(paste(""^208, "Pb/", ""^204, "Pb")),
x = expression(paste(""^206, "Pb/", ""^204, "Pb"))) +
geom_line() +
geom_abline(slope = geochron86slope(0), intercept = geochron86yint(0), linetype = 2) +
geom_abline(slope = geochron86slope(1000), intercept = geochron86yint(1000), linetype = 2) +
geom_abline(slope = geochron86slope(2000), intercept = geochron86yint(2000), linetype = 2) +
geom_abline(slope = geochron86slope(3000), intercept = geochron86yint(3000), linetype = 2) +
geom_point(data = model.subset) +
geom_point(x = X1, y = Z1) +
annotate('text', x = X1, y = Z1, label = "T1 = 3700 Ma", hjust=-0.1, vjust=0.75) +
geom_text(data = model.subset, aes(label = t), hjust=1, vjust=-1) +
theme_bw(base_size = 18) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
scale_y_continuous(limits = c(31,39), breaks = c(32, 34, 36, 38))
plot_grid(p1, p2, labels = 'auto')
model.params <- read.csv("ModelParams.csv")
knitr::kable(model.params, justify = c("left", "centre"), caption = "Default model parameters used in `PbIso` functions. These can be manually changed if an alternative model is preferred.", "pipe", escape = FALSE)
options(digits=5)
Calc64(2700)
Calc74(2700)
Calc84(2700)
Calc64(2700, model = SK1)
options(digits=4)
CalcModAge(13.5, 14.5)
p3 <- ggplot(model, aes(x = x, y = y)) +
labs(y = expression(paste(""^207, "Pb/", ""^204, "Pb")),
x = expression(paste(""^206, "Pb/", ""^204, "Pb"))) +
geom_line() +
geom_point(data = model.subset) +
geom_point(x = X1, y = Y1) +
annotate('text', x = X1, y = Y1, label = "T1 = 3700 Ma", hjust=-0.1, vjust=0.75) +
geom_text(data = model.subset, aes(label = t), hjust=1, vjust=-0.5) +
geom_abline(slope = geochron76slope(2509.672), intercept = geochron76yint(2509.672), linetype = 2) +
geom_point(aes(x = xs, y = ys), pch = 21, fill = 'red', size = 4) +
geom_segment(aes(x = 14.05, y = 14.25, xend = 14.05, yend = 14.8),
arrow = arrow(length = unit(0.5, "cm"))) +
annotate('text', x = 14, y = 14, label = "intersection = \n model age") +
theme_bw(base_size = 16) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
coord_cartesian(expand = c(0,0), xlim = c(11, 14.5), ylim = c(12.75, 15.25))
p3
options(digits=3)
CalcMu(2700, 13.5, 14.5)
# Slope of sample with a known age (tsample)
#xsin <- X1 + (8.434376 * (exp(L8*T1*10^6) - exp(L8*2700*10^6)))
#ysin <- Y1 + ((8.434376 / U8U5) * (exp(L5*T1*10^6) - exp(L5*2700*10^6)))
xsin <- Calc64in(2700, xs, ys)
ysin <- Calc74in(2700, xs, ys)
model2 <- modelcurve(0:3700, Mu1 = 8.434376)
ms <- mslope(2700)
cs <- ys - (ms*xs)
p4 <- ggplot(model, aes(x = x, y = y)) +
labs(y = expression(paste(""^207, "Pb/", ""^204, "Pb")),
x = expression(paste(""^206, "Pb/", ""^204, "Pb"))) +
geom_line() +
geom_line(data = model2, color='blue') +
annotate('text', x = 14.1, y = 14.65, label = expression(paste(mu, " = 8.4")), angle = 10, color = 'blue') +
geom_point(data = model.subset) +
geom_point(x = X1, y = Y1) +
annotate('text', x = X1, y = Y1, label = "T1 = 3700 Ma", hjust=-0.1, vjust=0.75) +
geom_text(data = model.subset, aes(label = t), hjust=1, vjust=-0.5) +
geom_abline(slope = geochron76slope(2700), intercept = geochron76yint(2700), linetype = 2) +
annotate('text', x = 12.5, y = 13.85, label = "Geochron = 2700 Ma", angle = 31) +
#geom_abline(slope = ms, intercept = cs, linetype = 1, color='red') +
geom_segment(aes(x = 13, xend = 13.75, y = cs + ms*13, yend = cs + ms*13.75), color='red') +
geom_point(aes(x = xs, y = ys), pch = 21, fill = 'red', size = 4) +
geom_point(aes(x = xsin, y = ysin), pch = 21, fill = 'grey', size = 3) +
geom_segment(aes(x = xsin, y = 14, xend = xsin, yend = ysin-0.1),
arrow = arrow(length = unit(0.5, "cm")), color='darkgrey') +
annotate('text', x = xsin, y = 13.8, label = "initial \n composition", color='darkgrey') +
theme_bw(base_size = 16) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
coord_cartesian(expand = c(0,0), xlim = c(11, 14.5), ylim = c(12.75, 15.25))
p4
options(digits=3)
CalcKa(2700, 33, 13.5)
zs <- 33
model$SK64A <- mapply(Calc64, model$t, Mu1 = 8.4)
model$SK84A <- mapply(Calc84, model$t, W1= 8.4*3.317)
xsin <- Calc64in(2700, xs, ys)
zsin <- Calc84in(2700, xs, ys, zs)
p5 <- ggplot(model, aes(x = x, y = z)) +
labs(y = expression(paste(""^208, "Pb/", ""^204, "Pb")),
x = expression(paste(""^206, "Pb/", ""^204, "Pb"))) +
geom_line(aes(x = SK64A, y = SK84A), color='blue') +
geom_abline(slope = geochron86slope(2700), intercept = geochron86yint(2700), linetype = 2) +
geom_line() +
geom_point(data = model.subset) +
geom_point(x = X1, y = Z1) +
geom_point(aes(x = xsin, y = zsin), pch = 21, fill = 'grey', size = 3) +
annotate('text', x = X1, y = Z1, label = "T1 = 3700 Ma", hjust=-0.1, vjust=0.75) +
geom_text(data = model.subset, aes(label = t), hjust=1, vjust=-1) +
geom_point(aes(x = xs, y = zs), pch = 21, fill = 'red', size = 4) +
geom_segment(aes(x = xsin, y = 32, xend = xsin, yend = 32.7),
arrow = arrow(length = unit(0.5, "cm")), color='darkgrey') +
annotate('text', x = xsin, y = 31.5, label = "initial \n composition", color='darkgrey') +
theme_bw(base_size = 18) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
scale_y_continuous(limits = c(31,39), breaks = c(32, 34, 36, 38))
p5
options(digits=5)
Calc64in(2700, 13.5, 14.5)
Calc74in(2700, 13.5, 14.5)
Calc84in(2700, 13.5, 14.5, 33)
df <- read.csv("SampleData.csv")
my_kable(head(df), digits = c(0,0,3,3,3), caption = "First six rows of sample data input with sample information and measured Pb isotope ratios")
df$ModAge <- mapply(CalcModAge, df$Pb64, df$Pb74)
df$Mu     <- mapply(CalcMu, df$age, df$Pb64, df$Pb74)
df$Ka     <- mapply(CalcKa, df$age, df$Pb84, df$Pb64)
df$Pb64in <- mapply(Calc64in, df$age, df$Pb64, df$Pb74)
df$Pb74in <- mapply(Calc74in, df$age, df$Pb64, df$Pb74)
df$Pb84in <- mapply(Calc84in, df$age, df$Pb64, df$Pb74, df$Pb84)
my_kable(head(df), digits = c(0,0,3,3,3,0,1,1,3,3,3), caption = "First six rows of dataframe after the `PbIso` functions have been applied")
SKcurve <- modelcurve(0:3700)
my_kable(head(SKcurve), caption = "First six rows of the 'SKcurve' dataframe produced using the `modelcurve()` function.")
bluecurve <- modelcurve(0:3700, Mu1 = 8.43)
```{r}
mc1 <- modelcurve(3700:4570, model = SK1)
mc2 <- modelcurve(0:3700)
mc3 <- modelcurve(0:3700, Mu1 = 8)
mc1 <- modelcurve(3700:4570, model = SK1)
mc2 <- modelcurve(0:3700)
mc3 <- modelcurve(0:3700, Mu1 = 8)
```{r figmc, fig.pos='H', echo = FALSE, fig.cap = "Model curves generated using the `modelcurve()` function for [@RN10] 1st stage (mc1), [@RN10] 2nd stage (mc2) and a hypothetical sample with Mu=8 (mc3)", dpi=1000, fig.width = 10, fig.height= 4}
a <- ggplot(mc1, aes(x = x, y = y)) +
labs(color='model curve', y = expression(paste(""^207, "Pb/", ""^204, "Pb")), x = expression(paste(""^206, "Pb/", ""^204, "Pb"))) +
geom_line(aes(color = 'mc1')) +
geom_line(data = mc2, aes(color = 'mc2')) +
geom_line(data = mc3, aes(color = 'mc3')) +
scale_color_manual(values = c('red', 'black', 'blue')) +
theme_bw(base_size = 16) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position = c(0.7,0.3))
b <- ggplot(mc1, aes(x = x, y = z)) +
labs(y = expression(paste(""^208, "Pb/", ""^204, "Pb")), x = expression(paste(""^206, "Pb/", ""^204, "Pb"))) +
geom_line(aes(color = 'mc1')) +
geom_line(data = mc2, aes(colour = 'mc2')) +
geom_line(data = mc3, aes(colour = 'mc3')) +
scale_color_manual(values = c('red', 'black', 'blue')) +
theme_bw(base_size = 16) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position='none')
plot_grid(a, b)
---
output: github_document
bibliography: bibliography.bibtex
---
<!-- README.md is generated from README.Rmd. Please edit that file -->
```{r, include = FALSE}
library(tidyverse)
library(cowplot)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "man/figures/README-",
out.width = "100%"
)
library(PbIso)
model.params <- read.csv("ModelParams.csv")
knitr::kable(model.params, justify = c("left", "centre"), caption = "Default model parameters used in `PbIso` functions. These can be manually changed if an alternative model is preferred.", "pipe", escape = FALSE)
Calc64(2700)
Calc74(2700)
Calc84(2700)
CalcModAge(13.5, 14.5)
CalcMu(2700, 13.5, 14.5)
mc1 <- modelcurve(3700:4570, model = SK1)
mc2 <- modelcurve(0:3700)
mc3 <- modelcurve(0:3700, Mu1 = 8)
a <- ggplot(mc1, aes(x = x, y = y)) +
labs(color='model curve', y = expression(paste(""^207, "Pb/", ""^204, "Pb")), x = expression(paste(""^206, "Pb/", ""^204, "Pb"))) +
geom_line(aes(color = 'mc1')) +
geom_line(data = mc2, aes(color = 'mc2')) +
geom_line(data = mc3, aes(color = 'mc3')) +
scale_color_manual(values = c('red', 'black', 'blue')) +
theme_bw(base_size = 16) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position = c(0.7,0.3))
b <- ggplot(mc1, aes(x = x, y = z)) +
labs(y = expression(paste(""^208, "Pb/", ""^204, "Pb")), x = expression(paste(""^206, "Pb/", ""^204, "Pb"))) +
geom_line(aes(color = 'mc1')) +
geom_line(data = mc2, aes(colour = 'mc2')) +
geom_line(data = mc3, aes(colour = 'mc3')) +
scale_color_manual(values = c('red', 'black', 'blue')) +
theme_bw(base_size = 16) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position='none')
plot_grid(a, b)
geochron76slope(2700)
geochron76yint(2700)
geochron86slope(2700)
geochron86yint(2700)
library(tidyverse)
library(cowplot)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "man/figures/README-",
out.width = "100%"
)
library(PbIso)
model.params <- read.csv("ModelParams.csv")
knitr::kable(model.params, justify = c("left", "centre"), caption = "Default model parameters used in `PbIso` functions. These can be manually changed if an alternative model is preferred.", "pipe", escape = FALSE)
